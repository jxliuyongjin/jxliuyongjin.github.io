import{_ as n,o as s,c as a,b as p}from"./app-156886f7.js";const t={},e=p(`<h3 id="一、querywrapper" tabindex="-1"><a class="header-anchor" href="#一、querywrapper" aria-hidden="true">#</a> 一、QueryWrapper</h3><h4 id="_1、组装查询条件" tabindex="-1"><a class="header-anchor" href="#_1、组装查询条件" aria-hidden="true">#</a> 1、组装查询条件</h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">QueryWrapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">User</span><span class="token punctuation">&gt;</span></span> queryWrapper <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">QueryWrapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
queryWrapper<span class="token punctuation">.</span><span class="token function">like</span><span class="token punctuation">(</span><span class="token string">&quot;user_name&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;宋&quot;</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">between</span><span class="token punctuation">(</span><span class="token string">&quot;age&quot;</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">30</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">isNotNull</span><span class="token punctuation">(</span><span class="token string">&quot;email&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">User</span><span class="token punctuation">&gt;</span></span> users <span class="token operator">=</span> userMapper<span class="token punctuation">.</span><span class="token function">selectList</span><span class="token punctuation">(</span>queryWrapper<span class="token punctuation">)</span><span class="token punctuation">;</span>
users<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token operator">::</span><span class="token function">println</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>执行的语句是：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token operator">==</span><span class="token operator">&gt;</span>  <span class="token class-name">Preparing</span><span class="token operator">:</span> <span class="token class-name">SELECT</span> id<span class="token punctuation">,</span>user_name<span class="token punctuation">,</span>age<span class="token punctuation">,</span>email<span class="token punctuation">,</span>is_deleted <span class="token constant">FROM</span> t_user <span class="token class-name">WHERE</span> is_deleted<span class="token operator">=</span><span class="token number">0</span> <span class="token constant">AND</span> <span class="token punctuation">(</span>user_name <span class="token constant">LIKE</span> <span class="token operator">?</span> <span class="token constant">AND</span> age <span class="token constant">BETWEEN</span> <span class="token operator">?</span> <span class="token constant">AND</span> <span class="token operator">?</span> <span class="token constant">AND</span> email <span class="token constant">IS</span> <span class="token class-name">NOT</span> <span class="token constant">NULL</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>由此可见</p><p><strong>这里主动排除了逻辑删除的记录只有is_deleted不为1的情况才会被查询出来</strong></p><h4 id="_2、组装排序条件" tabindex="-1"><a class="header-anchor" href="#_2、组装排序条件" aria-hidden="true">#</a> 2、组装排序条件</h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">QueryWrapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">User</span><span class="token punctuation">&gt;</span></span> queryWrapper <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">QueryWrapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 queryWrapper<span class="token punctuation">.</span><span class="token function">orderByDesc</span><span class="token punctuation">(</span><span class="token string">&quot;age&quot;</span><span class="token punctuation">)</span>
             <span class="token punctuation">.</span><span class="token function">orderByAsc</span><span class="token punctuation">(</span><span class="token string">&quot;id&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">User</span><span class="token punctuation">&gt;</span></span> users <span class="token operator">=</span> userMapper<span class="token punctuation">.</span><span class="token function">selectList</span><span class="token punctuation">(</span>queryWrapper<span class="token punctuation">)</span><span class="token punctuation">;</span>
users<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token operator">::</span><span class="token function">println</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>执行的语句是：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">Preparing</span><span class="token operator">:</span> <span class="token class-name">SELECT</span> id<span class="token punctuation">,</span>user_name<span class="token punctuation">,</span>age<span class="token punctuation">,</span>email<span class="token punctuation">,</span>is_deleted <span class="token constant">FROM</span> t_user <span class="token class-name">WHERE</span> is_deleted<span class="token operator">=</span><span class="token number">0</span> <span class="token constant">ORDER</span> <span class="token constant">BY</span> age <span class="token constant">DESC</span><span class="token punctuation">,</span>id <span class="token constant">ASC</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="_3、组装删除条件" tabindex="-1"><a class="header-anchor" href="#_3、组装删除条件" aria-hidden="true">#</a> 3、组装删除条件</h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">QueryWrapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">User</span><span class="token punctuation">&gt;</span></span> queryWrapper <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">QueryWrapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
queryWrapper<span class="token punctuation">.</span><span class="token function">isNotNull</span><span class="token punctuation">(</span><span class="token string">&quot;email&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">int</span> result <span class="token operator">=</span> userMapper<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span>queryWrapper<span class="token punctuation">)</span><span class="token punctuation">;</span> 
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>“result<span class="token operator">:</span>”<span class="token operator">+</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>执行的语句是：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">Preparing</span><span class="token operator">:</span> <span class="token constant">UPDATE</span> t_user <span class="token class-name">SET</span> is_deleted<span class="token operator">=</span><span class="token number">1</span> <span class="token class-name">WHERE</span> is_deleted<span class="token operator">=</span><span class="token number">0</span> <span class="token constant">AND</span> <span class="token punctuation">(</span>email <span class="token constant">IS</span> <span class="token class-name">NOT</span> <span class="token constant">NULL</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>由此可见:</p><p><strong>由于我们开启了逻辑删除，所有mybatisplus只是执行了逻辑删除，把is_deleted字段改为1</strong></p><h4 id="_4、组装修改功能" tabindex="-1"><a class="header-anchor" href="#_4、组装修改功能" aria-hidden="true">#</a> 4、组装修改功能</h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">QueryWrapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">User</span><span class="token punctuation">&gt;</span></span> queryWrapper <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">QueryWrapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
queryWrapper<span class="token punctuation">.</span><span class="token function">gt</span><span class="token punctuation">(</span><span class="token string">&quot;age&quot;</span><span class="token punctuation">,</span><span class="token number">11</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">like</span><span class="token punctuation">(</span><span class="token string">&quot;user_name&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;宋&quot;</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">or</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">isNull</span><span class="token punctuation">(</span><span class="token string">&quot;email&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">User</span> usr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">User</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
usr<span class="token punctuation">.</span><span class="token function">setEmail</span><span class="token punctuation">(</span><span class="token string">&quot;notNull&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
<span class="token keyword">int</span> result <span class="token operator">=</span> userMapper<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span>usr<span class="token punctuation">,</span>queryWrapper<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>“result<span class="token operator">:</span>”<span class="token operator">+</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>执行的语句是：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">Preparing</span><span class="token operator">:</span> <span class="token constant">UPDATE</span> t_user <span class="token class-name">SET</span> email<span class="token operator">=</span><span class="token operator">?</span> <span class="token class-name">WHERE</span> is_deleted<span class="token operator">=</span><span class="token number">0</span> <span class="token constant">AND</span> <span class="token punctuation">(</span>age <span class="token operator">&gt;</span> <span class="token operator">?</span> <span class="token constant">AND</span> user_name <span class="token constant">LIKE</span> <span class="token operator">?</span> <span class="token constant">OR</span> email <span class="token class-name">IS</span> <span class="token constant">NULL</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>注意:</strong></p><ul><li><p>默认是and,如果想要添加“或”逻辑需要调用.or()</p></li><li><p>只跟新User赋值了的对应属性</p></li><li><p>这里排除了逻辑删除了的数据</p></li></ul><h4 id="_5、条件的优先级" tabindex="-1"><a class="header-anchor" href="#_5、条件的优先级" aria-hidden="true">#</a> 5、条件的优先级</h4><p>假如有这样一个需求：修改用户名名含有“宋”，并且（年龄大于10或者邮箱为null）的用户</p><p>这里涉及了and和or的穿插问题</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">QueryWrapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">User</span><span class="token punctuation">&gt;</span></span> queryWrapper <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">QueryWrapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
queryWrapper<span class="token punctuation">.</span><span class="token function">like</span><span class="token punctuation">(</span><span class="token string">&quot;user_name&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;宋&quot;</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">and</span><span class="token punctuation">(</span>
                n<span class="token operator">-&gt;</span>n<span class="token punctuation">.</span><span class="token function">gt</span><span class="token punctuation">(</span><span class="token string">&quot;age&quot;</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">)</span>
                     <span class="token punctuation">.</span><span class="token function">or</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                     <span class="token punctuation">.</span><span class="token function">isNull</span><span class="token punctuation">(</span><span class="token string">&quot;email&quot;</span><span class="token punctuation">)</span>
        <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">User</span> usr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">User</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
usr<span class="token punctuation">.</span><span class="token function">setEmail</span><span class="token punctuation">(</span><span class="token string">&quot;notNull&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">int</span> delete <span class="token operator">=</span> userMapper<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span>usr<span class="token punctuation">,</span>queryWrapper<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>delete<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>执行的语句是：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">Preparing</span><span class="token operator">:</span> <span class="token constant">UPDATE</span> t_user <span class="token class-name">SET</span> email<span class="token operator">=</span><span class="token operator">?</span> <span class="token class-name">WHERE</span> is_deleted<span class="token operator">=</span><span class="token number">0</span> <span class="token constant">AND</span> <span class="token punctuation">(</span>user_name <span class="token constant">LIKE</span> <span class="token operator">?</span> <span class="token constant">AND</span> <span class="token punctuation">(</span>age <span class="token operator">&gt;</span> <span class="token operator">?</span> <span class="token constant">OR</span> email <span class="token class-name">IS</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>其中利用and(param)方法，通过传递一个Lambda表达式 的方式来内嵌一个or()操作</strong></p><p><strong>当然如果想要在or里面嵌条and操作也是一样的</strong></p><h4 id="_6、查询部分字段" tabindex="-1"><a class="header-anchor" href="#_6、查询部分字段" aria-hidden="true">#</a> 6、查询部分字段</h4><p>不需要查询所有字段的化可以拼装select语句</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">//修改用户名名含有“宋”，并且（年龄大于10或者邮箱为null）的用户</span>
<span class="token class-name">QueryWrapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">User</span><span class="token punctuation">&gt;</span></span> queryWrapper <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">QueryWrapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
queryWrapper<span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token string">&quot;user_name&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;age&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Map</span><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> maps <span class="token operator">=</span> userMapper<span class="token punctuation">.</span><span class="token function">selectMaps</span><span class="token punctuation">(</span>queryWrapper<span class="token punctuation">)</span><span class="token punctuation">;</span>
maps<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token operator">::</span><span class="token function">println</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>执行的语句：</p><p>==&gt; Preparing: SELECT user_name,age FROM t_user WHERE is_deleted=0</p><h4 id="_7、子查询" tabindex="-1"><a class="header-anchor" href="#_7、子查询" aria-hidden="true">#</a> 7、子查询</h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">//查找id小于等于100的用户信息</span>
<span class="token class-name">QueryWrapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">User</span><span class="token punctuation">&gt;</span></span> queryWrapper <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">QueryWrapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
queryWrapper<span class="token punctuation">.</span><span class="token function">inSql</span><span class="token punctuation">(</span><span class="token string">&quot;id&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;select id from t_user where age&lt;18&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Map</span><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> maps <span class="token operator">=</span> userMapper<span class="token punctuation">.</span><span class="token function">selectMaps</span><span class="token punctuation">(</span>queryWrapper<span class="token punctuation">)</span><span class="token punctuation">;</span>
maps<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token operator">::</span><span class="token function">println</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>执行的语句是：</p><p>SELECT id,user_name,age,email,is_deleted FROM t_user WHERE is_deleted=0 AND (id IN (select id from t_user where age&lt;18))</p><p>实现了sql语句的穿插</p><h4 id="_8、组装条件-condition组装" tabindex="-1"><a class="header-anchor" href="#_8、组装条件-condition组装" aria-hidden="true">#</a> 8、组装条件(condition组装)</h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">//condition 作为参数传递进去</span>
<span class="token class-name">String</span> usrName <span class="token operator">=</span> <span class="token string">&quot;emailFull&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">int</span> ageNum <span class="token operator">=</span> <span class="token number">30</span><span class="token punctuation">;</span>
<span class="token class-name">QueryWapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">User</span><span class="token punctuation">&gt;</span></span> updateWrapper <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">QueryWapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
updateWrapper<span class="token punctuation">.</span><span class="token function">like</span><span class="token punctuation">(</span><span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">isNotBlank</span><span class="token punctuation">(</span>usrName<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">&quot;user_name&quot;</span><span class="token punctuation">,</span>usrName<span class="token punctuation">)</span>
<span class="token punctuation">.</span><span class="token function">ge</span><span class="token punctuation">(</span>ageNum<span class="token operator">&gt;</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token string">&quot;age&quot;</span><span class="token punctuation">,</span>ageNum<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">User</span><span class="token punctuation">&gt;</span></span> users <span class="token operator">=</span> userMapper<span class="token punctuation">.</span><span class="token function">selectList</span><span class="token punctuation">(</span>updateWrapper<span class="token punctuation">)</span><span class="token punctuation">;</span>
users<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token operator">::</span><span class="token function">println</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>执行的sql语句是：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">Preparing</span><span class="token operator">:</span> <span class="token class-name">SELECT</span> id<span class="token punctuation">,</span>user_name<span class="token punctuation">,</span>age<span class="token punctuation">,</span>email<span class="token punctuation">,</span>is_deleted <span class="token constant">FROM</span> t_user <span class="token class-name">WHERE</span> is_deleted<span class="token operator">=</span><span class="token number">0</span> <span class="token constant">AND</span> <span class="token punctuation">(</span>user_name <span class="token constant">LIKE</span> <span class="token operator">?</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>这里like多传入了一个条件判断StringUtils.isNotBlank(usrName)</strong></p><h3 id="二、updatewrapper" tabindex="-1"><a class="header-anchor" href="#二、updatewrapper" aria-hidden="true">#</a> 二、UpdateWrapper</h3><h4 id="_1、更新数据" tabindex="-1"><a class="header-anchor" href="#_1、更新数据" aria-hidden="true">#</a> 1、更新数据</h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">//修改用户名名含有“宋”，并且（年龄大于10或者邮箱为null）的用户</span>
<span class="token class-name">UpdateWrapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">User</span><span class="token punctuation">&gt;</span></span> updateWrapper <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">UpdateWrapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
updateWrapper<span class="token punctuation">.</span><span class="token function">like</span><span class="token punctuation">(</span><span class="token string">&quot;user_name&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;宋&quot;</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">and</span><span class="token punctuation">(</span>
                n<span class="token operator">-&gt;</span>n<span class="token punctuation">.</span><span class="token function">gt</span><span class="token punctuation">(</span><span class="token string">&quot;age&quot;</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">or</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">isNull</span><span class="token punctuation">(</span><span class="token string">&quot;email&quot;</span><span class="token punctuation">)</span>
        <span class="token punctuation">)</span><span class="token punctuation">;</span>
updateWrapper<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&quot;user_name&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;emailFull&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&quot;email&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;123@qqq.com&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">int</span> update <span class="token operator">=</span> userMapper<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> updateWrapper<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;update:&quot;</span><span class="token operator">+</span>update<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>执行的sql语句：</p><p>UPDATE t_user SET user_name=?,email=? WHERE is_deleted=0 AND (user_name LIKE ? AND (age &gt; ? OR email IS NULL))</p><p><strong>和QueryWapper相比就是不用再创建User对象了</strong></p><h3 id="三、lambdaquerywrapper" tabindex="-1"><a class="header-anchor" href="#三、lambdaquerywrapper" aria-hidden="true">#</a> 三、LambdaQueryWrapper</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">//condition 作为参数传递进去</span>
<span class="token class-name">String</span> usrName <span class="token operator">=</span> <span class="token string">&quot;emailFull&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">int</span> ageNum <span class="token operator">=</span> <span class="token number">30</span><span class="token punctuation">;</span>
<span class="token class-name">LambdaQueryWrapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">User</span><span class="token punctuation">&gt;</span></span> updateWrapper <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LambdaQueryWrapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
updateWrapper<span class="token punctuation">.</span><span class="token function">like</span><span class="token punctuation">(</span><span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">isNotBlank</span><span class="token punctuation">(</span>usrName<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token class-name">User</span><span class="token operator">::</span><span class="token function">getUserName</span><span class="token punctuation">,</span>usrName<span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">ge</span><span class="token punctuation">(</span>ageNum<span class="token operator">&gt;</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token class-name">User</span><span class="token operator">::</span><span class="token function">getAge</span><span class="token punctuation">,</span>ageNum<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">User</span><span class="token punctuation">&gt;</span></span> users <span class="token operator">=</span> userMapper<span class="token punctuation">.</span><span class="token function">selectList</span><span class="token punctuation">(</span>updateWrapper<span class="token punctuation">)</span><span class="token punctuation">;</span>
users<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token operator">::</span><span class="token function">println</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>这里使用了User::getUserName和User::getAge代替了直接填写字段名，不怕写数据库错字段名的可以用这个</strong></p><h3 id="四、lambdaupdatewrapper" tabindex="-1"><a class="header-anchor" href="#四、lambdaupdatewrapper" aria-hidden="true">#</a> 四、LambdaUpdateWrapper</h3><p>用法同上（LambdaQueryWrapper）</p><h3 id="五、更多" tabindex="-1"><a class="header-anchor" href="#五、更多" aria-hidden="true">#</a> 五、更多</h3><p>查看官方文档https://www.baomidou.com/pages/10c804/</p>`,59),o=[e];function c(l,u){return s(),a("div",null,o)}const r=n(t,[["render",c],["__file","3.构造器.html.vue"]]);export{r as default};
