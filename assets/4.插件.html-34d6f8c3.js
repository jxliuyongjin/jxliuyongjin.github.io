import{_ as n,o as a,c as s,b as e}from"./app-82f1370d.js";const t={},p=e(`<h3 id="一、分页插件" tabindex="-1"><a class="header-anchor" href="#一、分页插件" aria-hidden="true">#</a> 一、分页插件</h3><h5 id="_1、添加配置类" tabindex="-1"><a class="header-anchor" href="#_1、添加配置类" aria-hidden="true">#</a> 1、添加配置类</h5><h6 id="_1-1、创建config文件夹-添加配置类mybatisplusconfig" tabindex="-1"><a class="header-anchor" href="#_1-1、创建config文件夹-添加配置类mybatisplusconfig" aria-hidden="true">#</a> 1.1、创建config文件夹，添加配置类MyBatisPlusConfig</h6><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Configuration</span>
<span class="token annotation punctuation">@MapperScan</span><span class="token punctuation">(</span><span class="token string">&quot;com.example.mybatisplus.mapper&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyBatisPlusConfig</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Bean</span>
    <span class="token keyword">public</span> <span class="token class-name">MybatisPlusInterceptor</span> <span class="token function">mybatisPlusInterceptor</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token class-name">MybatisPlusInterceptor</span> interceptor <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MybatisPlusInterceptor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        interceptor<span class="token punctuation">.</span><span class="token function">addInnerInterceptor</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">PaginationInnerInterceptor</span><span class="token punctuation">(</span><span class="token class-name">DbType</span><span class="token punctuation">.</span><span class="token constant">MYSQL</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> interceptor<span class="token punctuation">;</span> 
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h6 id="_1-2、测试" tabindex="-1"><a class="header-anchor" href="#_1-2、测试" aria-hidden="true">#</a> 1.2、测试</h6><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">Page</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">User</span><span class="token punctuation">&gt;</span></span> page <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Page</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
userMapper<span class="token punctuation">.</span><span class="token function">selectPage</span><span class="token punctuation">(</span>page<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>page<span class="token punctuation">.</span><span class="token function">getRecords</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>page<span class="token punctuation">.</span><span class="token function">getPages</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>page<span class="token punctuation">.</span><span class="token function">getTotal</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>page<span class="token punctuation">.</span><span class="token function">getCurrent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>执行mysql语句：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">Preparing</span><span class="token operator">:</span> <span class="token class-name">SELECT</span> id<span class="token punctuation">,</span>user_name<span class="token punctuation">,</span>age<span class="token punctuation">,</span>email<span class="token punctuation">,</span>is_deleted <span class="token constant">FROM</span> t_user <span class="token class-name">WHERE</span> is_deleted<span class="token operator">=</span><span class="token number">0</span> <span class="token constant">LIMIT</span> <span class="token operator">?</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h5 id="_2、自定义分页功能" tabindex="-1"><a class="header-anchor" href="#_2、自定义分页功能" aria-hidden="true">#</a> 2、自定义分页功能</h5><h6 id="_2-1、再usermapper里面定义自己的接口" tabindex="-1"><a class="header-anchor" href="#_2-1、再usermapper里面定义自己的接口" aria-hidden="true">#</a> 2.1、再UserMapper里面定义自己的接口</h6><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">Page</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">User</span><span class="token punctuation">&gt;</span></span> <span class="token function">selectPageVo</span><span class="token punctuation">(</span><span class="token annotation punctuation">@Param</span><span class="token punctuation">(</span><span class="token string">&quot;page&quot;</span><span class="token punctuation">)</span> <span class="token class-name">Page</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">User</span><span class="token punctuation">&gt;</span></span> page<span class="token punctuation">,</span><span class="token annotation punctuation">@Param</span><span class="token punctuation">(</span><span class="token string">&quot;age&quot;</span><span class="token punctuation">)</span> <span class="token class-name">Integer</span> age<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h6 id="_2-1、usermapper-xml里自定义sql语句" tabindex="-1"><a class="header-anchor" href="#_2-1、usermapper-xml里自定义sql语句" aria-hidden="true">#</a> 2.1、UserMapper.xml里自定义sql语句</h6><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token operator">&lt;</span>select id<span class="token operator">=</span><span class="token string">&quot;selectPageVo&quot;</span> resultType<span class="token operator">=</span><span class="token string">&quot;User&quot;</span><span class="token operator">&gt;</span>
    select id<span class="token punctuation">,</span>name<span class="token punctuation">,</span>age<span class="token punctuation">,</span>email from user where age <span class="token operator">&gt;</span> #<span class="token punctuation">{</span>age<span class="token punctuation">}</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>select<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>​ 这里User是没有别名的，需要在application.yml里配置别名</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>type<span class="token operator">-</span>aliases<span class="token operator">-</span><span class="token keyword">package</span><span class="token operator">:</span> com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>mybatisplus<span class="token punctuation">.</span>model
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h6 id="_2-2、测试" tabindex="-1"><a class="header-anchor" href="#_2-2、测试" aria-hidden="true">#</a> 2.2、测试：</h6><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">Page</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">User</span><span class="token punctuation">&gt;</span></span> page <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Page</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
userMapper<span class="token punctuation">.</span><span class="token function">selectPageVo</span><span class="token punctuation">(</span>page<span class="token punctuation">,</span> <span class="token number">13</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>执行的语句是：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">Preparing</span><span class="token operator">:</span> select id<span class="token punctuation">,</span>name<span class="token punctuation">,</span>age<span class="token punctuation">,</span>email from user where age <span class="token operator">&gt;</span> <span class="token operator">?</span> <span class="token constant">LIMIT</span> <span class="token operator">?</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>由此可以看到，mybatis-plus自动给自定义的sql后面添加了LIMIT字段</p><h3 id="二、乐观锁" tabindex="-1"><a class="header-anchor" href="#二、乐观锁" aria-hidden="true">#</a> 二、乐观锁</h3><p>乐观锁是通过修改记录的时候，修改版本号来达到安全修改数据的目的</p><h4 id="第一步-添加version字段" tabindex="-1"><a class="header-anchor" href="#第一步-添加version字段" aria-hidden="true">#</a> 第一步：添加version字段</h4><p>数据库和结构体都添加version字段，并作标记</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>@Data 
public class Goods {
    public long id;
    private String name;
    private Integer price;
    private String icon;
    private Integer startdata;
    private Integer enddata;
    //乐观锁版本号字段
    @Version
    private Integer version;
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="第二步-添加乐观锁的拦截器" tabindex="-1"><a class="header-anchor" href="#第二步-添加乐观锁的拦截器" aria-hidden="true">#</a> 第二步：添加乐观锁的拦截器</h4><p>在配置类中，添加乐观锁的拦截器</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>@Bean
public MybatisPlusInterceptor mybatisPlusInterceptor()
{
    MybatisPlusInterceptor interceptor = new MybatisPlusInterceptor();
    //添加分页插件
    interceptor.addInnerInterceptor(new PaginationInnerInterceptor(DbType.MYSQL));
    //添加乐观锁插件
    interceptor.addInnerInterceptor(new OptimisticLockerInnerInterceptor());
    return interceptor;
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="第三步-测试" tabindex="-1"><a class="header-anchor" href="#第三步-测试" aria-hidden="true">#</a> 第三步：测试</h4><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>Goods goods = goodsMapper.selectById(1);
System.out.println(goods);
goods.setPrice(goods.getPrice()+1);
int count = goodsMapper.updateById(goods);
System.out.println(&quot;count:&quot;+count);
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>第一次执行查找goodsMapper.selectById(1)的时候执行的sql语句：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token operator">==</span><span class="token operator">&gt;</span>  <span class="token class-name">Preparing</span><span class="token operator">:</span> <span class="token class-name">SELECT</span> id<span class="token punctuation">,</span>name<span class="token punctuation">,</span>price<span class="token punctuation">,</span>icon<span class="token punctuation">,</span>startdata<span class="token punctuation">,</span>enddata<span class="token punctuation">,</span>version <span class="token constant">FROM</span> goods <span class="token class-name">WHERE</span> id<span class="token operator">=</span><span class="token operator">?</span>
<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Parameters</span><span class="token operator">:</span> <span class="token function">1</span><span class="token punctuation">(</span><span class="token class-name">Integer</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>执行结果是：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">Goods</span><span class="token punctuation">(</span>id<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> name<span class="token operator">=</span>sd<span class="token punctuation">,</span> price<span class="token operator">=</span><span class="token number">13</span><span class="token punctuation">,</span> icon<span class="token operator">=</span>sdsd<span class="token operator">/</span>sds<span class="token punctuation">,</span> startdata<span class="token operator">=</span><span class="token number">2323</span><span class="token punctuation">,</span> enddata<span class="token operator">=</span><span class="token number">11212</span><span class="token punctuation">,</span> version<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>可见此时的version的值是0</strong></p><p>接下来 goodsMapper.updateById(goods);更改了价格，执行的代码是</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Preparing</span><span class="token operator">:</span> <span class="token constant">UPDATE</span> goods <span class="token class-name">SET</span> name<span class="token operator">=</span><span class="token operator">?</span><span class="token punctuation">,</span> price<span class="token operator">=</span><span class="token operator">?</span><span class="token punctuation">,</span> icon<span class="token operator">=</span><span class="token operator">?</span><span class="token punctuation">,</span> startdata<span class="token operator">=</span><span class="token operator">?</span><span class="token punctuation">,</span> enddata<span class="token operator">=</span><span class="token operator">?</span><span class="token punctuation">,</span> version<span class="token operator">=</span><span class="token operator">?</span> <span class="token class-name">WHERE</span> id<span class="token operator">=</span><span class="token operator">?</span> <span class="token class-name">AND</span> version<span class="token operator">=</span><span class="token operator">?</span>
<span class="token operator">==</span><span class="token operator">&gt;</span> <span class="token class-name">Parameters</span><span class="token operator">:</span> <span class="token function">sd</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">14</span><span class="token punctuation">(</span><span class="token class-name">Integer</span><span class="token punctuation">)</span><span class="token punctuation">,</span> sdsd<span class="token operator">/</span><span class="token function">sds</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">2323</span><span class="token punctuation">(</span><span class="token class-name">Integer</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">11212</span><span class="token punctuation">(</span><span class="token class-name">Integer</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">1</span><span class="token punctuation">(</span><span class="token class-name">Integer</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">1</span><span class="token punctuation">(</span><span class="token class-name">Long</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">0</span><span class="token punctuation">(</span><span class="token class-name">Integer</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>可以看出此时修改的条件加了version的判断，当version的值不是我们之前拿到的值，说明我们在执行此操作之前，有另外的用户跟新了此条数据，导致了version的版本号跟新，则此条执行失败。否则执行成功,version自动+1，实现了版本修改</strong></p>`,38),o=[p];function c(l,i){return a(),s("div",null,o)}const r=n(t,[["render",c],["__file","4.插件.html.vue"]]);export{r as default};
