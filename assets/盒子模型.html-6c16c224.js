import{_ as s,o as n,c as a,b as e}from"./app-05941657.js";const i={},l=e(`<h2 id="_1、常用的长度单位" tabindex="-1"><a class="header-anchor" href="#_1、常用的长度单位" aria-hidden="true">#</a> 1、常用的长度单位</h2><p><strong>css中必须加单位，否则失效</strong></p><h3 id="_1-1、px" tabindex="-1"><a class="header-anchor" href="#_1-1、px" aria-hidden="true">#</a> 1.1、px</h3><h3 id="_1-2、em" tabindex="-1"><a class="header-anchor" href="#_1-2、em" aria-hidden="true">#</a> 1.2、em</h3><ul><li>表示相对所在元素里的font-size的倍数</li><li>如果当前元素内没有font-size就找父元素里面的font-size</li></ul><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">div</span><span class="token punctuation">{</span>
	<span class="token property">font-size</span><span class="token punctuation">:</span>20px
	<span class="token property">width</span><span class="token punctuation">:</span>10em
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-3、rem" tabindex="-1"><a class="header-anchor" href="#_1-3、rem" aria-hidden="true">#</a> 1.3、rem</h3><p>相对于根元素(html)的font-size</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">div</span><span class="token punctuation">{</span><span class="token property">width</span><span class="token punctuation">:</span>20rem <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_1-4、rem" tabindex="-1"><a class="header-anchor" href="#_1-4、rem" aria-hidden="true">#</a> 1.4、rem</h3><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token comment">/*相对于父元素的width百分比*/</span>
<span class="token property">width</span><span class="token punctuation">:</span>50%
<span class="token comment">/*相对于父元素的font-size百分比*/</span>
<span class="token property">font-size</span><span class="token punctuation">:</span>150%
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-4、vw-vh" tabindex="-1"><a class="header-anchor" href="#_1-4、vw-vh" aria-hidden="true">#</a> 1.4、vw,vh</h3><p>2、元素的显示模式</p><p>2.1、none</p><p>不显示元素，元素会被隐藏</p><p>2.1、块级元素(block)</p><ul><li>独占一行</li><li>默认宽度：撑满整个body</li><li>默认高度：被内容撑开</li><li>可以通过css设置宽高</li></ul><p>2.2、行内元素(inline)</p><ul><li>不是独占一行，可以和其他行内元素在同一行，如果行内容纳不了，就会自动在下一行从左往右排列</li><li>默认宽度：由内容撑开</li><li>默认高度：由内容撑开</li><li>无法通过css设置宽高</li></ul><p>2.3、行内块元素(inline-block)</p><ul><li>不是独占一行，可以和其他行内元素在同一行，如果行内容纳不了，就会自动在下一行从左往右排列</li><li>默认宽度：由内容撑开</li><li>默认高度：由内容撑开</li><li>可以通过css设置宽高</li></ul><p>2.3、总结各元素的显示模式</p><p><img src="https://atts.w3cschool.cn/attachments/image/20230926/1695682384124813.png" alt="各元素的显示模式"></p>`,23),t=[l];function c(d,p){return n(),a("div",null,t)}const o=s(i,[["render",c],["__file","盒子模型.html.vue"]]);export{o as default};
